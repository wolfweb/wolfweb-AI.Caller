@using AI.Caller.Phone.Entities
@model IEnumerable<User>

@{
    ViewData["Title"] = "用户管理";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col">
            <h2><i class="bi bi-people"></i> 用户管理</h2>
            <p class="text-muted">管理SIP账户坐席（系统用户）</p>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
                <i class="bi bi-plus-circle"></i> 添加用户
            </button>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-header">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h5 class="mb-0">用户列表</h5>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchUsers" class="form-control" placeholder="搜索用户...">
                    </div>
                </div>
            </div>
        </div>
        
        @if (Model == null || !Model.Any())
        {
            <div class="card-body text-center py-5">
                <i class="bi bi-people fs-1 text-muted"></i>
                <h4 class="mt-3">暂无用户</h4>
                <p class="text-muted">系统中还没有添加任何用户</p>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
                    <i class="bi bi-plus-circle"></i> 添加第一个用户
                </button>
            </div>
        }
        else
        {
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0" id="usersTable">
                        <thead class="table-light">
                            <tr>
                                <th>用户名</th>
                                <th>显示名称</th>
                                <th>邮箱</th>
                                <th>SIP账户</th>
                                <th>状态</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr class="user-row">
                                    <td>
                                        <i class="bi bi-person-circle text-primary me-2"></i>
                                        @user.Username
                                    </td>
                                    <td>@(user.DisplayName ?? "-")</td>
                                    <td>@(user.Email ?? "-")</td>
                                    <td>
                                        @if (user.SipAccount != null)
                                        {
                                            <span class="badge bg-info">@user.SipAccount.SipUsername</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">未分配</span>
                                        }
                                    </td>
                                    <td>
                                        @if (user.SipRegistered)
                                        {
                                            <span class="badge bg-success">已注册</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">未注册</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button class="btn btn-outline-primary edit-user-btn" 
                                                    data-user-id="@user.Id"
                                                    data-username="@user.Username"
                                                    data-display-name="@(user.DisplayName ?? "")"
                                                    data-email="@(user.Email ?? "")"
                                                    data-phone="@(user.PhoneNumber ?? "")"
                                                    data-sip-account-id="@(user.SipAccountId?.ToString() ?? "")"
                                                    title="编辑">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-outline-info assign-sip-btn"
                                                    data-user-id="@user.Id"
                                                    data-username="@user.Username"
                                                    title="分配SIP账户">
                                                <i class="bi bi-telephone-forward"></i>
                                            </button>
                                            <button class="btn btn-outline-danger delete-user-btn" 
                                                    data-user-id="@user.Id"
                                                    data-username="@user.Username"
                                                    title="删除">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        共 @Model.Count() 个用户
                    </div>
                    <div>
                        <nav>
                            <ul class="pagination mb-0">
                                <li class="page-item disabled"><a class="page-link" href="#">上一页</a></li>
                                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                <li class="page-item disabled"><a class="page-link" href="#">下一页</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- 添加用户模态框 -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">添加用户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="addUsername" class="form-label">用户名</label>
                        <input type="text" class="form-control" id="addUsername" required>
                    </div>
                    <div class="mb-3">
                        <label for="addPassword" class="form-label">密码</label>
                        <input type="password" class="form-control" id="addPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="addDisplayName" class="form-label">显示名称</label>
                        <input type="text" class="form-control" id="addDisplayName">
                    </div>
                    <div class="mb-3">
                        <label for="addEmail" class="form-label">邮箱</label>
                        <input type="email" class="form-control" id="addEmail">
                    </div>
                    <div class="mb-3">
                        <label for="addPhone" class="form-label">手机号</label>
                        <input type="text" class="form-control" id="addPhone">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveAddUserBtn">保存</button>
            </div>
        </div>
    </div>
</div>

<!-- 编辑用户模态框 -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">编辑用户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">用户名</label>
                        <input type="text" class="form-control" id="editUsername" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="editPassword" class="form-label">新密码</label>
                        <input type="password" class="form-control" id="editPassword">
                        <div class="form-text">留空表示不更改密码</div>
                    </div>
                    <div class="mb-3">
                        <label for="editDisplayName" class="form-label">显示名称</label>
                        <input type="text" class="form-control" id="editDisplayName">
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">邮箱</label>
                        <input type="email" class="form-control" id="editEmail">
                    </div>
                    <div class="mb-3">
                        <label for="editPhone" class="form-label">手机号</label>
                        <input type="text" class="form-control" id="editPhone">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveEditUserBtn">保存</button>
            </div>
        </div>
    </div>
</div>

<!-- 分配SIP账户模态框 -->
<div class="modal fade" id="assignSipModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">分配SIP账户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="assignSipForm">
                    <input type="hidden" id="assignUserId">
                    <div class="mb-3">
                        <label for="assignUsername" class="form-label">用户名</label>
                        <input type="text" class="form-control" id="assignUsername" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="sipAccountSelect" class="form-label">选择SIP账户</label>
                        <select class="form-select" id="sipAccountSelect">
                            <option value="">请选择SIP账户</option>
                            <!-- SIP账户选项将通过JavaScript动态加载 -->
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveAssignSipBtn">保存</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // 搜索功能
            const searchInput = document.getElementById('searchUsers');
            const userRows = document.querySelectorAll('.user-row');
            
            searchInput.addEventListener('keyup', function() {
                const searchTerm = this.value.toLowerCase();
                
                userRows.forEach(row => {
                    const username = row.querySelector('td:first-child').textContent.toLowerCase();
                    const displayName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const email = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    
                    if (username.includes(searchTerm) || 
                        displayName.includes(searchTerm) || 
                        email.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
            
            // 添加用户按钮
            document.getElementById('saveAddUserBtn').addEventListener('click', async function() {
                const username = document.getElementById('addUsername').value;
                const password = document.getElementById('addPassword').value;
                const displayName = document.getElementById('addDisplayName').value;
                const email = document.getElementById('addEmail').value;
                const phone = document.getElementById('addPhone').value;
                
                if (!username || !password) {
                    alert('用户名和密码是必填项');
                    return;
                }
                
                try {
                    const response = await fetch('/Account/AddUser', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            username: username,
                            password: password,
                            displayName: displayName,
                            email: email,
                            phoneNumber: phone
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('用户添加成功');
                        location.reload();
                    } else {
                        alert('添加失败: ' + result.message);
                    }
                } catch (error) {
                    alert('添加失败: ' + error.message);
                }
            });
            
            // 编辑用户按钮
            document.querySelectorAll('.edit-user-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const userId = this.dataset.userId;
                    const username = this.dataset.username;
                    const displayName = this.dataset.displayName;
                    const email = this.dataset.email;
                    const phone = this.dataset.phone;
                    
                    document.getElementById('editUserId').value = userId;
                    document.getElementById('editUsername').value = username;
                    document.getElementById('editDisplayName').value = displayName;
                    document.getElementById('editEmail').value = email;
                    document.getElementById('editPhone').value = phone;
                    
                    const editModal = new bootstrap.Modal(document.getElementById('editUserModal'));
                    editModal.show();
                });
            });
            
            // 保存编辑用户
            document.getElementById('saveEditUserBtn').addEventListener('click', async function() {
                const userId = document.getElementById('editUserId').value;
                const password = document.getElementById('editPassword').value;
                const displayName = document.getElementById('editDisplayName').value;
                const email = document.getElementById('editEmail').value;
                const phone = document.getElementById('editPhone').value;
                
                try {
                    const response = await fetch('/Account/EditUser', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            id: userId,
                            password: password,
                            displayName: displayName,
                            email: email,
                            phoneNumber: phone
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('用户信息更新成功');
                        location.reload();
                    } else {
                        alert('更新失败: ' + result.message);
                    }
                } catch (error) {
                    alert('更新失败: ' + error.message);
                }
            });
            
            // 分配SIP账户按钮
            document.querySelectorAll('.assign-sip-btn').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const userId = this.dataset.userId;
                    const username = this.dataset.username;
                    
                    document.getElementById('assignUserId').value = userId;
                    document.getElementById('assignUsername').value = username;
                    
                    // 加载SIP账户列表
                    try {
                        const response = await fetch('/Account/GetAvailableSipAccounts');
                        const sipAccounts = await response.json();
                        
                        const select = document.getElementById('sipAccountSelect');
                        select.innerHTML = '<option value="">请选择SIP账户</option>';
                        
                        sipAccounts.forEach(account => {
                            const option = document.createElement('option');
                            option.value = account.id;
                            option.textContent = account.sipUsername;
                            select.appendChild(option);
                        });
                    } catch (error) {
                        console.error('加载SIP账户列表失败:', error);
                    }
                    
                    const assignModal = new bootstrap.Modal(document.getElementById('assignSipModal'));
                    assignModal.show();
                });
            });
            
            // 保存分配SIP账户
            document.getElementById('saveAssignSipBtn').addEventListener('click', async function() {
                const userId = document.getElementById('assignUserId').value;
                const sipAccountId = document.getElementById('sipAccountSelect').value;
                
                try {
                    const response = await fetch('/Account/AssignSipAccount', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            userId: userId,
                            sipAccountId: sipAccountId || null
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('SIP账户分配成功');
                        location.reload();
                    } else {
                        alert('分配失败: ' + result.message);
                    }
                } catch (error) {
                    alert('分配失败: ' + error.message);
                }
            });
            
            // 删除用户按钮
            document.querySelectorAll('.delete-user-btn').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const userId = this.dataset.userId;
                    const username = this.dataset.username;
                    
                    if (confirm(`确定要删除用户 "${username}" 吗？此操作不可恢复。`)) {
                        try {
                            const response = await fetch(`/Account/DeleteUser/${userId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                }
                            });
                            
                            const result = await response.json();
                            
                            if (result.success) {
                                alert('用户删除成功');
                                location.reload();
                            } else {
                                alert('删除失败: ' + result.message);
                            }
                        } catch (error) {
                            alert('删除失败: ' + error.message);
                        }
                    }
                });
            });
        });
    </script>
}