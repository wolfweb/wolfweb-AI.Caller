@model AI.Caller.Phone.Models.TtsCallDocument
@{
    ViewData["Title"] = "TTS外呼详情";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-file-earmark-excel"></i> @Model.FileName</h2>
    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left"></i> 返回列表
    </a>
</div>

@if (TempData["Success"] != null) {
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null) {
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5><i class="bi bi-info-circle"></i> 文档信息</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-5">文档名称：</dt>
                    <dd class="col-sm-7">@Model.FileName</dd>
                    
                    <dt class="col-sm-5">总记录数：</dt>
                    <dd class="col-sm-7">@Model.TotalRecords</dd>
                    
                    <dt class="col-sm-5">已完成：</dt>
                    <dd class="col-sm-7"><span class="badge bg-success">@Model.CompletedCalls</span></dd>
                    
                    <dt class="col-sm-5">失败数：</dt>
                    <dd class="col-sm-7"><span class="badge bg-danger">@Model.FailedCalls</span></dd>
                    
                    <dt class="col-sm-5">状态：</dt>
                    <dd class="col-sm-7">
                        @switch (Model.Status) {
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Pending:
                                <span class="badge bg-secondary">待处理</span>
                                break;
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Running:
                                <span class="badge bg-primary">运行中</span>
                                break;
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Paused:
                                <span class="badge bg-warning">已暂停</span>
                                break;
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Completed:
                                <span class="badge bg-success">已完成</span>
                                break;
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Failed:
                                <span class="badge bg-danger">失败</span>
                                break;
                            case AI.Caller.Phone.Models.TtsCallTaskStatus.Cancelled:
                                <span class="badge bg-dark">已取消</span>
                                break;
                        }
                    </dd>
                    
                    <dt class="col-sm-5">上传时间：</dt>
                    <dd class="col-sm-7">@Model.UploadTime.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                    
                    @if (Model.StartTime.HasValue) {
                        <dt class="col-sm-5">开始时间：</dt>
                        <dd class="col-sm-7">@Model.StartTime.Value.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                    }
                    
                    @if (Model.EndTime.HasValue) {
                        <dt class="col-sm-5">结束时间：</dt>
                        <dd class="col-sm-7">@Model.EndTime.Value.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                    }
                </dl>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5><i class="bi bi-gear"></i> 任务控制</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Pending || Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Paused) {
                        <form asp-action="StartTask" asp-route-id="@Model.Id" method="post">
                            <button type="submit" class="btn btn-success w-100">
                                <i class="bi bi-play"></i> 启动任务
                            </button>
                        </form>
                    }
                    
                    @if (Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Running) {
                        <form asp-action="PauseTask" asp-route-id="@Model.Id" method="post">
                            <button type="submit" class="btn btn-warning w-100">
                                <i class="bi bi-pause"></i> 暂停任务
                            </button>
                        </form>
                    }
                    
                    @if (Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Paused) {
                        <form asp-action="ResumeTask" asp-route-id="@Model.Id" method="post">
                            <button type="submit" class="btn btn-info w-100">
                                <i class="bi bi-play"></i> 恢复任务
                            </button>
                        </form>
                    }
                    
                    @if (Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Running || Model.Status == AI.Caller.Phone.Models.TtsCallTaskStatus.Paused) {
                        <form asp-action="StopTask" asp-route-id="@Model.Id" method="post" 
                              onsubmit="return confirm('确定要停止任务吗？')">
                            <button type="submit" class="btn btn-danger w-100">
                                <i class="bi bi-stop"></i> 停止任务
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="bi bi-list"></i> 呼叫记录</h5>
            </div>
            <div class="card-body">
                @if (Model.CallRecords.Any()) {
                    <div class="table-responsive">
                        <table class="table table-sm table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>手机号</th>
                                    <th>性别</th>
                                    <th>称呼</th>
                                    <th>状态</th>
                                    <th>呼叫时间</th>
                                    <th>重试次数</th>
                                    <th>失败原因</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var record in Model.CallRecords.OrderBy(r => r.Id)) {
                                    <tr>
                                        <td>@record.PhoneNumber</td>
                                        <td>@record.Gender</td>
                                        <td>@record.AddressTemplate</td>
                                        <td>
                                            @switch (record.CallStatus) {
                                                case AI.Caller.Phone.Models.TtsCallStatus.Pending:
                                                    <span class="badge bg-secondary">待呼叫</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.Calling:
                                                    <span class="badge bg-primary">呼叫中</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.Connected:
                                                    <span class="badge bg-info">已接通</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.Completed:
                                                    <span class="badge bg-success">已完成</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.Failed:
                                                    <span class="badge bg-danger">失败</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.Busy:
                                                    <span class="badge bg-warning">忙线</span>
                                                    break;
                                                case AI.Caller.Phone.Models.TtsCallStatus.NoAnswer:
                                                    <span class="badge bg-secondary">无人接听</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @if (record.CallTime.HasValue) {
                                                @record.CallTime.Value.ToString("MM-dd HH:mm")
                                            } else {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                        <td>@record.RetryCount</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(record.FailureReason)) {
                                                <span class="text-danger">@record.FailureReason</span>
                                            } else {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-outline-info" 
                                                    onclick="showRecordDetails(@record.Id, '@record.PhoneNumber', '@record.TtsContent')"
                                                    title="查看详情">
                                                <i class="bi bi-info-circle"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                } else {
                    <div class="text-center py-4">
                        <i class="bi bi-inbox display-4 text-muted"></i>
                        <p class="text-muted mt-2">暂无呼叫记录</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- 记录详情模态框 -->
<div class="modal fade" id="recordDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">呼叫记录详情</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6><i class="bi bi-telephone"></i> 基本信息</h6>
                        <dl class="row">
                            <dt class="col-sm-4">手机号：</dt>
                            <dd class="col-sm-8" id="detail-phone"></dd>
                            <dt class="col-sm-4">性别：</dt>
                            <dd class="col-sm-8" id="detail-gender"></dd>
                            <dt class="col-sm-4">称呼：</dt>
                            <dd class="col-sm-8" id="detail-address"></dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6><i class="bi bi-robot"></i> AI集成信息</h6>
                        <dl class="row">
                            <dt class="col-sm-4">AI模式：</dt>
                            <dd class="col-sm-8" id="detail-ai-mode"></dd>
                            <dt class="col-sm-4">使用模板：</dt>
                            <dd class="col-sm-8" id="detail-template"></dd>
                            <dt class="col-sm-4">脚本类型：</dt>
                            <dd class="col-sm-8" id="detail-script-type"></dd>
                        </dl>
                    </div>
                </div>
                
                <h6><i class="bi bi-chat-text"></i> 原始TTS内容</h6>
                <div class="bg-light p-3 rounded mb-3">
                    <pre id="detail-original-content" class="mb-0"></pre>
                </div>
                
                <h6><i class="bi bi-magic"></i> 处理后的脚本预览</h6>
                <div class="bg-info bg-opacity-10 p-3 rounded">
                    <pre id="detail-processed-script" class="mb-0"></pre>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>

<script>
function showRecordDetails(recordId, phoneNumber, ttsContent) {
    // 设置基本信息
    document.getElementById('detail-phone').textContent = phoneNumber;
    
    // 从表格中获取其他信息
    const row = document.querySelector(`button[onclick*="${recordId}"]`).closest('tr');
    const cells = row.querySelectorAll('td');
    
    document.getElementById('detail-gender').textContent = cells[1].textContent || '-';
    document.getElementById('detail-address').textContent = cells[2].textContent || '-';
    document.getElementById('detail-original-content').textContent = ttsContent;
    
    // 模拟AI集成信息（实际应该从API获取）
    const hasInteractiveKeywords = /请问|咨询|了解|详情|回复|确认|选择|按键|转接|人工|客服/.test(ttsContent);
    
    document.getElementById('detail-ai-mode').innerHTML = hasInteractiveKeywords ? 
        '<span class="badge bg-success">交互式AI</span>' : 
        '<span class="badge bg-info">单向TTS</span>';
    
    document.getElementById('detail-template').textContent = '默认呼入模板'; // 实际应该从API获取
    document.getElementById('detail-script-type').textContent = hasInteractiveKeywords ? '智能对话' : '语音播报';
    
    // 生成处理后的脚本预览
    const processedScript = generateScriptPreview(ttsContent, phoneNumber, cells[1].textContent, cells[2].textContent);
    document.getElementById('detail-processed-script').textContent = processedScript;
    
    // 显示模态框
    new bootstrap.Modal(document.getElementById('recordDetailsModal')).show();
}

function generateScriptPreview(ttsContent, phoneNumber, gender, address) {
    const now = new Date();
    const timeGreeting = getTimeGreeting(now.getHours());
    const addressTitle = address || (gender === '男' ? '先生' : gender === '女' ? '女士' : '您');
    
    let processed = ttsContent;
    processed = processed.replace(/\{称呼\}/g, addressTitle);
    processed = processed.replace(/\{手机号\}/g, phoneNumber);
    processed = processed.replace(/\{问候\}/g, timeGreeting);
    processed = processed.replace(/\{时间\}/g, now.toLocaleTimeString('zh-CN', {hour: '2-digit', minute: '2-digit'}));
    
    return `${timeGreeting}，${addressTitle}。${processed}`;
}

function getTimeGreeting(hour) {
    if (hour >= 6 && hour < 12) return '早上好';
    if (hour >= 12 && hour < 14) return '中午好';
    if (hour >= 14 && hour < 18) return '下午好';
    if (hour >= 18 && hour < 22) return '晚上好';
    return '您好';
}
</script>