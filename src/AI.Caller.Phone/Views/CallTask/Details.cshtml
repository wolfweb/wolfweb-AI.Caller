@model AI.Caller.Phone.Entities.BatchCallJob

@{
    ViewData["Title"] = "任务详情";
}

<h1>@ViewData["Title"]: @Model.JobName</h1>

<div>
    <h4>批量呼叫任务</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Status)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Status)</dd>

        <dt class="col-sm-2">进度</dt>
        <dd class="col-sm-10">
            @if (Model.TotalCount > 0) {
                var progress = (int)Math.Round((double)Model.ProcessedCount * 100 / Model.TotalCount);
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: @progress%;" aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100">@Model.ProcessedCount / @Model.TotalCount</div>
                </div>
                <div>
                    <span class="text-success">成功: @Model.SuccessCount</span> |
                    <span class="text-danger">失败: @Model.FailedCount</span>
                </div>
            } else {
                <span>N/A</span>
            }
        </dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OriginalFileName)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.OriginalFileName)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.CreatedAt)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.CompletedAt)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.CompletedAt)</dd>
    </dl>
</div>

@if (Model.Status == AI.Caller.Phone.Entities.BatchJobStatus.CompletedWithFailures || Model.FailedCount > 0) {
    <form asp-action="RetryFailed" asp-route-id="@Model.Id" method="post" class="mb-3">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">重试所有失败项</button>
    </form>
}


<h4>呼叫记录</h4>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CallLogs.First().PhoneNumber)</th>
            <th>@Html.DisplayNameFor(model => model.CallLogs.First().Status)</th>
            <th>@Html.DisplayNameFor(model => model.CallLogs.First().FailureReason)</th>
            <th>@Html.DisplayNameFor(model => model.CallLogs.First().CreatedAt)</th>
            <th>@Html.DisplayNameFor(model => model.CallLogs.First().CompletedAt)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var log in Model.CallLogs.OrderByDescending(l => l.CreatedAt)) {
            <tr>
                <td>@Html.DisplayFor(modelItem => log.PhoneNumber)</td>
                <td>@Html.DisplayFor(modelItem => log.Status)</td>
                <td>@Html.DisplayFor(modelItem => log.FailureReason)</td>
                <td>@Html.DisplayFor(modelItem => log.CreatedAt)</td>
                <td>@Html.DisplayFor(modelItem => log.CompletedAt)</td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index">返回任务列表</a>
</div>