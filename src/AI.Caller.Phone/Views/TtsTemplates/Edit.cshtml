@model AI.Caller.Phone.Entities.TtsTemplate

@{
    ViewData["Title"] = "编辑TTS模板";
    var allVariables = (MultiSelectList)ViewBag.AllVariables;
}
<div class="container mt-5">
    <h1>@ViewData["Title"]</h1>

    <hr />
    <form asp-action="Edit" method="post">
        <div class="row">
            <div class="col-md-7">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h4 class="mb-0">模板详情</h4>
                    </div>
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Content" class="form-label"></label>
                            <textarea asp-for="Content" class="form-control" rows="5"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="PlayCount" class="form-label"></label>
                                    <input asp-for="PlayCount" class="form-control" />
                                    <span asp-validation-for="PlayCount" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="PauseBetweenPlaysInSeconds" class="form-label"></label>
                                    <input asp-for="PauseBetweenPlaysInSeconds" class="form-control" />
                                    <span asp-validation-for="PauseBetweenPlaysInSeconds" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="SpeechRate" class="form-label"></label>
                                    <input asp-for="SpeechRate" class="form-control" type="number" step="0.1" min="0.5" max="2.0" />
                                    <span asp-validation-for="SpeechRate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label asp-for="EndingSpeech" class="form-label"></label>
                            <textarea asp-for="EndingSpeech" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="EndingSpeech" class="text-danger"></span>
                        </div>
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" asp-for="IsActive" />
                            <label class="form-check-label" asp-for="IsActive"></label>
                        </div>
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" asp-for="HangupAfterPlay" />
                            <label class="form-check-label" asp-for="HangupAfterPlay"></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h4 class="mb-0">关联变量</h4>
                    </div>
                    <div class="card-body">
                        <p class="text-muted small">选择此模板可用的变量。</p>
                        <div style="max-height: 320px; overflow-y: auto;">
                        @foreach (var item in allVariables)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="selectedVariables" value="@item.Value" checked="@item.Selected" id="variable-@item.Value">
                                <label class="form-check-label" for="variable-@item.Value">
                                    @item.Text
                                </label>
                            </div>
                        }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group mt-3">
            <input type="submit" value="保存" class="btn btn-primary" />
            <button type="button" id="testTtsBtn" class="btn btn-info">播放测试</button>
            <a asp-action="Index" class="btn btn-secondary">返回列表</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            $('#testTtsBtn').on('click', function() {
                var text = $('#Content').val();
                var speechRate = $('#SpeechRate').val();

                if (!text) {
                    alert('请输入模板内容进行测试。');
                    return;
                }

                // Replace placeholders with sample data for testing
                var sampleText = text.replace(/{[^{}]+}/g, '示例内容');

                var audioContext = new (window.AudioContext || window.webkitAudioContext)();
                
                var button = $(this);
                button.prop('disabled', true).text('正在生成...');

                fetch('@Url.Action("TestTts", "TtsTemplates")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        // ASP.NET Core Anti-Forgery Token
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify({ text: sampleText, speechRate: parseFloat(speechRate) })
                })
                .then(response => {
                    if (!response.ok || response.headers.get("Content-Length") === "0") {
                        throw new Error('音频生成失败或返回为空。');
                    }
                    return response.arrayBuffer();
                })
                .then(arrayBuffer => {
                    return audioContext.decodeAudioData(arrayBuffer);
                })
                .then(audioBuffer => {
                    var source = audioContext.createBufferSource();
                    source.buffer = audioBuffer;
                    source.connect(audioContext.destination);
                    source.start(0);
                    
                    source.onended = function() {
                        button.prop('disabled', false).text('播放测试');
                    }
                })
                .catch(error => {
                    console.error('播放测试时出错:', error);
                    alert('播放测试失败，请检查控制台获取更多信息。');
                    button.prop('disabled', false).text('播放测试');
                });
            });
        });
    </script>
}